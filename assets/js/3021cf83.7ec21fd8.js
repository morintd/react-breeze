"use strict";(self.webpackChunkdocumentation_2=self.webpackChunkdocumentation_2||[]).push([[538],{930:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(7896),r=(n(2784),n(876)),o=n(3303);const s={sidebar_position:1},l="Getting Started",i={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"react-breeze is a component library working with configurable colors.",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/react-breeze/docs/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Alert",permalink:"/react-breeze/docs/components/alert"}},d={},p=[],c={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"react-breeze is a component library working with configurable colors."),(0,r.kt)("p",null,"It allows for quick prototyping, while giving a good degree of freedom."),(0,r.kt)(o.Dx,{as:"h2",mdxType:"Title"},"Installation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"yarn")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add react-breeze\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"npm")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm add --save react-breeze\n")),(0,r.kt)(o.Dx,{as:"h2",mdxType:"Title"},"Configuration"),(0,r.kt)("p",null,"Before using react-breeze, you need to ",(0,r.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/installation"},"setup Tailwind CSS"),"."),(0,r.kt)(o.Dx,{as:"h3",mdxType:"Title"},"Step 1: allow active variant"),(0,r.kt)("p",null,"Next, you need to allow the variant ",(0,r.kt)("em",{parentName:"p"},"active")," for background color:"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"tailwind.config.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  content: ['./src/**/*.{html,js}', './node_modules/react-breeze/**/*.js'],\n  theme: {\n    extend: {},\n  },\n  variants: {\n    extend: {\n      backgroundColor: ['active'],\n    },\n  },\n  plugins: [],\n};\n")),(0,r.kt)(o.Dx,{as:"h3",mdxType:"Title"},"Step 2: colors"),(0,r.kt)("p",null,"Components in react-breeze work by passing them a color intent (",(0,r.kt)("inlineCode",{parentName:"p"},"primary"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"secondary"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"success"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"warning")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"danger"),") and in some cases two bonus colors (",(0,r.kt)("inlineCode",{parentName:"p"},"light")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"dark"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Button } from 'react-breeze';\n\n<Button>Button (Primary by default)</Button>\n<Button color=\"secondary\">Button (Secondary)</Button>\n")),(0,r.kt)(o.zx,{className:"mb-2 mr-1",mdxType:"Button"},"Button (Primary by default)"),(0,r.kt)(o.zx,{className:"mb-2 mr-1",color:"secondary",mdxType:"Button"},"Button (Secondary)"),(0,r.kt)("p",null,"Those colors must be added to the ",(0,r.kt)("inlineCode",{parentName:"p"},"theme")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"extends")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"colors")," object inside ",(0,r.kt)("inlineCode",{parentName:"p"},"tailwind.config.js"),". For ease of use, ",(0,r.kt)("inlineCode",{parentName:"p"},"react-breeze")," provide a function to generate them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { generateColors } = require('react-breeze');\n\nmodule.exports = {\n  content: ['./src/**/*.{html,js}', './node_modules/react-breeze/**/*.js'],\n  theme: {\n    extend: {\n      colors: generateColors(),\n    },\n  },\n  variants: {\n    extend: {\n      backgroundColor: ['active'],\n    },\n  },\n  plugins: [],\n};\n")),(0,r.kt)("p",null,"While a default color palette is used by ",(0,r.kt)("inlineCode",{parentName:"p"},"generateColors"),", you can define your own colors for each intent:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { generateColors } = require('react-breeze');\n\nmodule.exports = {\n  content: ['./src/**/*.{html,js}', './node_modules/react-breeze/**/*.js'],\n  theme: {\n    extend: {\n      colors: generateColors({\n        primary: '#0d6efd',\n        secondary: '#6c757d',\n        info: '#17a2b8',\n        success: '#28a745',\n        warning: '#ffc107',\n        danger: '#dc3545',\n      }),\n    },\n  },\n  variants: {\n    extend: {\n      backgroundColor: ['active'],\n    },\n  },\n  plugins: [],\n};\n")),(0,r.kt)("p",null,"(Tailwind use a shade system, which will be handled by ",(0,r.kt)("inlineCode",{parentName:"p"},"generateColor"),", using the given color as the middle (",(0,r.kt)("inlineCode",{parentName:"p"},"500"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"DEFAULT"),") value)"),(0,r.kt)(o.Dx,{as:"h3",mdxType:"Title"},"Step 3: safelist"),(0,r.kt)("p",null,"Classnames using those colors are generated dynamically, which means that some will be removed from the CSS at build time. In order to work, react-breeze makes use of the ",(0,r.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/content-configuration#safelisting-classes"},"safelist")," property inside ",(0,r.kt)("inlineCode",{parentName:"p"},"tailwind.config.js"),"."),(0,r.kt)("p",null,"React-breeze comes with an utility function ",(0,r.kt)("inlineCode",{parentName:"p"},"generateSafelist"),". It generates all the classnames that shouldn't be removed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { generateColors } = require('react-breeze');\n\nmodule.exports = {\n  content: ['./src/**/*.{html,js}', './node_modules/react-breeze/**/*.js'],\n  theme: {\n    extend: {\n      colors: generateColors(),\n    },\n  },\n  variants: {\n    extend: {\n      backgroundColor: ['active'],\n    },\n  },\n  plugins: [],\n  safelist: generateSafelist(),\n};\n")),(0,r.kt)("p",null,"That's it, you're good to go! ",(0,r.kt)("a",{href:"/docs/components/alert"},"Explore components")))}m.isMDXComponent=!0}}]);